{"version":3,"sources":["webpack:///src/app/components/donut/donut.component.ts","webpack:///src/app/components/donut/donut.component.html","webpack:///src/app/components/production/production.component.ts","webpack:///src/app/components/production/production.component.html","webpack:///src/app/components/camera-view/camera-view.component.ts","webpack:///src/app/components/camera-view/camera-view.component.html","webpack:///src/app/components/sensors/sensor/sensor.component.ts","webpack:///src/app/components/sensors/sensor/sensor.component.html","webpack:///src/app/services/icons.service.ts","webpack:///src/app/components/sensors/sensors.component.ts","webpack:///src/app/components/sensors/sensors.component.html","webpack:///src/app/components/table/table.component.ts","webpack:///src/app/components/table/table.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/main-shell/main-shell.component.ts","webpack:///src/app/components/main-shell/main-shell.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/container-update/container-update.component.ts","webpack:///src/app/components/container-update/container-update.component.html","webpack:///src/app/components/value-bar/value-bar.component.ts","webpack:///src/app/components/value-bar/value-bar.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/legend/legend.component.ts","webpack:///src/app/components/legend/legend.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/ticket/ticket.component.ts","webpack:///src/app/components/ticket/ticket.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/grid/grid.component.ts","webpack:///src/app/components/grid/grid.component.html","webpack:///src/app/components/shell-button/shell-button.component.ts","webpack:///src/app/components/shell-button/shell-button.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DonutComponent","value","secondValue","title","subTitle","valueColor","dunatColor","valueTitle","secondValueTitle","data","color","_total","changes","items","name","count","map","a","reduce","x","y","radius","Math","PI","index","percent","i","perimeter","selector","templateUrl","styleUrls","ProductionComponent","CameraViewComponent","videoplayer","nativeElement","play","toggleVideo","videoSource","sensor","SensorComponent","iconsService","id","icon","IconsService","iconRegistry","basePath","loadAllIcons","loadSvg","subscribe","providedIn","SensorsComponent","getMock","camData","streamUrl","groups","sensors","TableComponent","environment","production","serverurl","MainShellComponent","onViewStateCahnged","viewState","DashboardComponent","iconService","ticketValue","valueBarValue","donutValue","secondDounatValue","ContainerUpdateComponent","ValueBarComponent","maxValue","maxValueHeight","valuePrecentage","height","opacity","AppComponent","LegendComponent","gridColumns","forEach","AppModule","forRoot","declarations","imports","providers","bootstrap","schemas","TicketComponent","valueDescription","exprationDate","Date","minValueMargineTop","colors","ngOnChanges","valueHeight","diffFromMaxHeight","valueMargineTop","length","CardComponent","size","CARD_SIZE","small","GridComponent","ShellButtonComponent","onClick","state","selected","routes","AppRoutingModule","exports","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ILagendData } from '../legend/legend.component';\n\n@Component({\n  selector: 'app-donut',\n  templateUrl: './donut.component.html',\n  styleUrls: ['./donut.component.css']\n})\nexport class DonutComponent implements OnChanges {\n\n  @Input() public value = 65;\n  @Input() public secondValue = 65;\n  @Input() public title = 'test123';\n  @Input() public subTitle = 'sub';\n  @Input() public valueColor = '#53EC62';\n  @Input() public dunatColor = '#FF1647';\n  @Input() public valueTitle = 'V1';\n  @Input() public secondValueTitle = 'V2';\n\n  public dashArray: string;\n\n  public data = [{\n    title: 'a1',\n    color: this.valueColor,  \n  }, {\n    title: 'a2',\n    color: this.dunatColor\n  }];\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.items = [{\n      name: this.valueTitle,\n      count: +this.value,\n      color: this.valueColor\n    },{\n      name: this.secondValueTitle,\n      count: +this.secondValue,\n      color: this.dunatColor\n    }];\n\n    this._total = this.items.map(a=>a.count).reduce((x,y) => x+y);\n    \n  }\n\n  public items:Array<{name:string,count:number,color:string}>;\n\n  private _total:number =0;\n \n  constructor() {\n  }\n\n  getPerimeter(radius:number):number {\n    return Math.PI*2*radius;\n  }\n\n  getColor(index:number):string {\n    return this.items[index].color;\n  }\n\n  getOffset(radius:number,index:number):number {   \n    var percent=0;\n    for(var i=0;i<index;i++) {\n      percent+=((this.items[i].count)/this._total);\n    }\n    var perimeter = Math.PI*2*radius;\n    return perimeter*percent;\n  }\n\n  lagendItems() : ILagendData[] {\n    return this.items.map(i => {\n      return { \n        title: i.name, \n        value: i.count, \n        valueColor: i.color \n      }; \n    });\n  }\n}\n","<div class=\"donut-main-container\">\n    <div class=\"donut-content\">\n        <div class=\"titles-text title\">{{title}}</div> \n        <div class=\"titles-text sub-title\">{{subTitle}}</div> \n    </div>\n    <svg height=\"85%\" width=\"85%\" viewBox=\"0 0 120 120\">       \n        <circle  *ngFor=\"let item of items;let i=index\" cx=\"60\" cy=\"60\" r=\"50\" fill=\"transparent\" stroke-width=\"20\"\n        [attr.stroke-dasharray]=\"getPerimeter(50)\" [attr.stroke-dashoffset]=\"getOffset(50,i)\" [attr.stroke]=\"getColor(i)\"/>             \n     </svg>\n</div>\n<app-legend [items]=\"lagendItems()\"></app-legend>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-production',\n  templateUrl: './production.component.html',\n  styleUrls: ['./production.component.css']\n})\nexport class ProductionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"production-container\">\n\n    <app-card [title]=\"'Grid test'\">\n        <app-grid></app-grid>\n    </app-card>\n\n</div>","import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\nimport { ISensor } from '../sensors/sensor/sensor.component';\n\n@Component({\n  selector: 'app-camera-view',\n  templateUrl: './camera-view.component.html',\n  styleUrls: ['./camera-view.component.css']\n})\nexport class CameraViewComponent implements OnInit {\n\n  @Input() public videoSource: string;\n  @Input() public sensor: ISensor;\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public toggleVideo() {\n    this.videoplayer.nativeElement.play();\n  }\n\n}\n","\n<app-sensor [data]=\"sensor\">\n\n</app-sensor>\n\n<video class=\"camera-view\" controls (click)=\"toggleVideo()\" #videoPlayer>\n    <source src=\"{{videoSource}}\" type=\"video/mp4\" />\n    Browser not supported\n</video>","import { Component, OnInit, Input } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-sensor',\n  templateUrl: './sensor.component.html',\n  styleUrls: ['./sensor.component.css']\n})\nexport class SensorComponent implements OnInit {\n\n  constructor(private iconsService: IconsService) { \n    this.data = {\n       id: 0,\n       title: 'corn',\n       color: '#53EC62',\n       icon: 'ing_corn',\n       value: null\n    }  \n  }\n\n  @Input() public data: ISensor;\n\n  ngOnInit(): void {\n  }\n\n}\n\nexport interface ISensor {\n  id: number;\n  title: string;\n  icon: string;\n  color: string;\n  value: number;\n}","<div class=\"sensor-container\">\n    <svg-icon class=\"sensor-icon\" [name]=\"data.icon\" [svgStyle]=\"{'width.px':16, 'height.px':16, 'padding.px':7}\"></svg-icon>\n    <div class=\"sensor-title\">{{ data.title }}</div>\n    <div *ngIf=\"data.value === null\" class=\"sensor-circle\">\n        <div class=\"sensor-inner-circle\" [ngStyle]=\"{'background': data.color}\"></div>\n    </div>\n    <div *ngIf=\"data.value !== null\" class=\"sensor-value\">\n        {{ data.value }}\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { SvgIconRegistryService } from 'angular-svg-icon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconsService {\n\n  private readonly basePath = '../assets/images/';\n  \n  public constructor(private iconRegistry: SvgIconRegistryService) { \n    this.loadAllIcons();\n  }\n\n  private loadAllIcons() {\n    // #region logo\n    this.iconRegistry.loadSvg(`${this.basePath}logo/logo_text.svg`, 'logo_txt').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}logo/logo_image.svg`, 'logo_img').subscribe();\n    // #endregion\n\n    // #region ingredience\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/corn.svg`, 'ing_corn').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/mashroom.svg`, 'ing_mashroom').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/olives.svg`, 'ing_olives').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/onion.svg`, 'ing_onion').subscribe();\n    //#endregion\n\n    // #region sensors\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/camera.svg`, 'sens_cam').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/cloud.svg`, 'sens_cloud').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/drop.svg`, 'sens_drop').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/electricity.svg`, 'sens_elec').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/humidity.svg`, 'sens_humidity').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/o3.svg`, 'sens_o3').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/temperature.svg`, 'sens_temp').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/vbact.svg`, 'sens_vbact').subscribe();\n    // #endregion\n \n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ISensor } from './sensor/sensor.component';\n\n@Component({\n  selector: 'app-sensors',\n  templateUrl: './sensors.component.html',\n  styleUrls: ['./sensors.component.css']\n})\nexport class SensorsComponent implements OnInit {\n\n  @Input() public data: ISensors;\n\n  public camData: any;\n  constructor() { }\n\n  public groups: ISensorsGroup;\n\n  ngOnInit(): void {\n    this.data = this.getMock();\n    this.camData = {\n     streamUrl: 'https://www.rmp-streaming.com/media/big-buck-bunny-360p.mp4', \n     sensor: {\n      id: 0,\n      icon: 'sens_vbact',\n      color: '#53EC62',\n      title: 'VBACT',\n      value: null\n      }\n    };\n  }\n\n  private getMock(): ISensors {\n    return {\n      groups: [{\n        title: 'Title',\n        sensors:[{\n          id: 0,\n          icon: 'sens_elec',\n          color: '#53EC62',\n          title: 'Electricity',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_drop',\n          color: '#53EC62',\n          title: 'Water Pressure',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_drop',\n          color: '#53EC62',\n          title: 'Water Pressure',\n          value: null\n        }]\n        }, {\n        title: 'Ozone',\n        sensors:[{\n          id: 0,\n          icon: 'sens_o3',\n          color: '#53EC62',\n          title: 'level in water (ppm)',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_o3',\n          color: '#FF1647',\n          title: 'Water Pressure',\n          value: null\n        }],\n        }, {\n          title: 'Title',\n          sensors:[{\n            id: 0,\n            icon: 'sens_temp',\n            color: '#53EC62',\n            title: 'Temperature (0C)',\n            value: 20\n          }, {\n            id: 0,\n            icon: 'sens_humidity',\n            color: '#FF1647',\n            title: 'Humidity (%)',\n            value: 20\n          }]\n      }, {\n        title: 'Ozon',\n        sensors:[{\n          id: 0,\n          icon: 'sens_vbact',\n          color: '#53EC62',\n          title: 'VBACT',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_vbact',\n          color: '#53EC62',\n          title: 'VBACT',\n          value: null\n        }]\n    }\n    ]\n    }\n  }\n\n}\n\n\nexport interface ISensorsGroup {\n  title: string;\n  sensors: ISensor[];\n}\n\nexport interface ISensors {\n  groups: ISensorsGroup[];\n}","\n<div *ngFor=\"let group of data.groups\">\n    <div class=\"group-title\">{{ group.title }}</div>        \n    <div class=\"sensor-item\" *ngFor=\"let sensor of group.sensors\">\n        <app-sensor [data]=\"sensor\">\n        </app-sensor>\n    </div>\n    <div class=\"sensor-item v-space\"></div>\n</div> \n\n<div class=\"sensor-item\">\n    <app-camera-view [sensor]=\"camData.sensor\" [videoSource]=\"camData.streamUrl\">\n    </app-camera-view>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"table-container\">\n\n    <div class=\"table-header\">\n\n    </div>\n\n    <div class=\"table-rows\">\n        \n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverurl: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-main-shell',\n  templateUrl: './main-shell.component.html',\n  styleUrls: ['./main-shell.component.css']\n})\nexport class MainShellComponent implements OnInit {\n\n  @Output() public onViewStateCahnged = new EventEmitter<string>();\n  \n  constructor(private iconsService: IconsService) { }\n\n  public viewState: 'main' | 'prod' | 'container';\n  ngOnInit(): void {\n    this.viewState = 'main';\n  }\n\n}\n","<div class=\"main-shell-container\">\n\n    <div appResolutionFit class=\"shell-top-bar-icon\">\n        <svg-icon class=\"logo-icon\" [name]=\"'logo_img'\" [svgStyle]=\"{'width.px':64, 'height.px':64, 'padding.px':1}\"></svg-icon>\n        <div class=\"logo-text\">HIGHPPER</div>\n    </div>\n\n    <div class=\"shell-top-bar-container\">\n        toolbar    \n    </div>\n\n    <div class=\"shell-side-bar-container\">\n\n        <div class=\"shell-side-button\">\n            <app-shell-button \n                [selected]=\"viewState == 'main'\" \n                (onClick)=\"viewState = 'main'; onViewStateCahnged.emit(viewState);\"\n                [title]=\"'Main page'\" \n                [icon]=\"'ing_corn'\">\n            </app-shell-button>\n        </div>\n        <div class=\"shell-side-button\">\n            <app-shell-button \n                [selected]=\"viewState == 'prod'\" \n                (onClick)=\"viewState = 'prod'; onViewStateCahnged.emit(viewState);\"\n                [title]=\"'Pizza in production'\" \n                [icon]=\"'ing_corn'\">\n            </app-shell-button>\n        </div>\n        <div class=\"shell-side-button\">\n            <app-shell-button \n                [selected]=\"viewState == 'container'\" \n                (onClick)=\"viewState = 'container'; onViewStateCahnged.emit(viewState);\"\n                [title]=\"'Container update'\" \n                [icon]=\"'ing_corn'\">\n            </app-shell-button>        \n        </div>        \n    </div>\n    <ng-content></ng-content>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  // temp\n  public ticketValue: number = 12;\n  public valueBarValue: number = 44;\n\n  public donutValue: number = 43;\n  public secondDounatValue: number = 11;\n  \n  constructor(public iconService: IconsService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"dashboard-container\">\n\n    <app-card [title]=\"'Sensors'\" class=\"span-row-2\">\n        <app-sensors></app-sensors>\n    </app-card>\n\n    <app-card [title]=\"'Performance'\">\n        \n        <app-donut \n            [title]=\"'Today'\" \n            [subTitle]=\"'05.11.2020'\"\n            [value]=\"125\" \n            [valueTitle]=\"'Pizzas made'\"\n            [secondValue]=\"4\"\n            [secondValueTitle]=\"'Fialed Pizzas'\">\n        </app-donut>\n        \n    </app-card>\n\n    <app-card [title]=\"'Type of dugh'\">\n        \n        <app-donut \n            [title]=\"'Today'\" \n            [subTitle]=\"'05.11.2020'\"\n            [value]=\"85\" \n            [valueColor]=\"'#4686FF'\"\n            [valueTitle]=\"'13” Thick'\"\n            [secondValue]=\"40\"\n            [dunatColor]=\"'#244583'\"\n            [secondValueTitle]=\"'14” Thin'\">\n        </app-donut>\n\n    </app-card>\n  \n    <app-card [title]=\"'Distribution by additions'\" class=\"span-col-2\">\n        <div class=\"flex ticket-container\">\n            <app-value-bar [title]=\"'Onion'\" [value]=\"12\"></app-value-bar>\n            <app-value-bar [value]=\"20\"></app-value-bar>\n            <app-value-bar [value]=\"33\"></app-value-bar>\n            <app-value-bar [value]=\"30\"></app-value-bar>\n            <app-value-bar [value]=\"17\"></app-value-bar>\n            <app-value-bar [value]=\"47\"></app-value-bar>\n            <app-value-bar [value]=\"9\"></app-value-bar>\n            <app-value-bar [value]=\"47\"></app-value-bar>\n            <app-value-bar [value]=\"19\"></app-value-bar>\n          </div>\n    </app-card>\n  \n    <app-card [title]=\"'Ingredients'\" class=\"span-col-3\">\n        <div class=\"flex ticket-container\">\n            <app-ticket [title]=\"'Mashroom'\" [icon]=\"'ing_mashroom'\" [value]=\"12\"></app-ticket>\n            <app-ticket [value]=\"23\"></app-ticket>\n            <app-ticket [value]=\"44\"></app-ticket>\n            <app-ticket [value]=\"34\"></app-ticket>\n            <app-ticket [value]=\"23\"></app-ticket>\n            <app-ticket [value]=\"44\"></app-ticket>\n            <app-ticket [value]=\"3\"></app-ticket>\n        </div>\n    </app-card>\n    \n  </div>  \n\n\n      <!--\n        <app-card [title]=\"'Control'\" class=\"card\">\n        <label>Dounat Value 1</label>\n        <input type=\"number\" [(ngModel)]=\"donutValue\"/>\n        <br/>\n        <label>Dounat Value 2</label>\n        <input type=\"number\" [(ngModel)]=\"secondDounatValue\"/>\n        <br/>\n        <label>ValueBar Value</label>\n        <input type=\"number\" [(ngModel)]=\"valueBarValue\"/>\n        <br/>\n        <label>Ticket Value</label>\n        <input type=\"number\" [(ngModel)]=\"ticketValue\"/>\n        </app-card>\n    -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container-update',\n  templateUrl: './container-update.component.html',\n  styleUrls: ['./container-update.component.css']\n})\nexport class ContainerUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>container-update works!</p>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ILagendData } from '../legend/legend.component';\n\n@Component({\n  selector: 'app-value-bar',\n  templateUrl: './value-bar.component.html',\n  styleUrls: ['./value-bar.component.css']\n})\nexport class ValueBarComponent implements OnInit, OnChanges {\n\n  constructor() { }\n  \n  @Input() public value = 33;\n  @Input() public title = 'title';\n\n  public height: string;\n  public opacity: number;\n\n  private readonly maxValue = 47;\n  private readonly maxValueHeight = 155;\n  \n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const valuePrecentage = this.value / this.maxValue;\n    const height = this.maxValueHeight * valuePrecentage;\n    this.opacity = valuePrecentage ;\n    this.height = `${height}px`;\n  }\n\n  public lagendItems(): ILagendData[] {\n    return [ { title: this.title, value: this.value, valueColor: '#244583' } ];\n  }\n}\n\n\n\n","<div class=\"bar-container\">\n    <div class=\"bar-value\" [style.height]=\"height\" [style.opacity]=\"opacity\">        \n    </div>\n</div>\n<app-legend class=\"bar-legend\" [items]=\"lagendItems()\"></app-legend>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public title = 'highpper-ui';\n  public donutValue = 5;\n  public secondDounatValue = 33;\n  public valueBarValue = 12;\n  public ticketValue = 11;\n\n  public viewState: string = 'main';\n\n  ngOnInit() {\n  //  document.getElementById('file').onchange = (data) => {\n  //    console.log('change', data);\n  //  }\n  }\n  \n}\n","<app-main-shell (onViewStateCahnged)=\"viewState = $event\">  \n  <app-dashboard *ngIf=\"viewState == 'main'\"></app-dashboard>\n  <app-production *ngIf=\"viewState == 'prod'\"></app-production>\n  <app-container-update *ngIf=\"viewState == 'container'\"></app-container-update>\n</app-main-shell>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnChanges {\n\n  @Input() public items: ILagendData[];\n\n  public gridColumns: string = \"1fr\";\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges) { \n    this.gridColumns = \"\";\n    this.items.forEach(i => this.gridColumns = `${this.gridColumns} 1fr`);\n  }\n}\n\nexport interface ILagendData {\n  title: string;\n  value: number;\n  valueColor: string;\n}\n","<div class=\"lagend-container\" [ngStyle]=\"{'grid-template-columns': gridColumns}\">\n    <div *ngFor=\"let item of items\" class=\"lagend-title\">\n        <span>{{item.title}}</span>\n    </div>\n    <div *ngFor=\"let item of items\" class=\"lagend-value\">\n        <span [ngStyle]=\"{'color': item.valueColor}\">{{item.value}}</span>\n    </div>        \n </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './components/card/card.component';\nimport { DonutComponent } from './components/donut/donut.component';\nimport { FormsModule } from '@angular/forms';\nimport { ValueBarComponent } from './components/value-bar/value-bar.component';\nimport { LegendComponent } from './components/legend/legend.component';\nimport { TicketComponent } from './components/ticket/ticket.component';\nimport { CommonModule } from '@angular/common';\nimport { MainShellComponent } from './components/main-shell/main-shell.component';\nimport { SensorsComponent } from './components/sensors/sensors.component';\nimport { SensorComponent } from './components/sensors/sensor/sensor.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularSvgIconModule } from 'angular-svg-icon';\nimport { TableComponent } from './components/table/table.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProductionComponent } from './components/production/production.component';\nimport { ContainerUpdateComponent } from './components/container-update/container-update.component';\nimport { ShellButtonComponent } from './components/shell-button/shell-button.component';\nimport { CameraViewComponent } from './components/camera-view/camera-view.component';\nimport { GridComponent } from './components/grid/grid.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    DonutComponent,\n    ValueBarComponent,\n    LegendComponent,\n    TicketComponent,\n    MainShellComponent,\n    SensorsComponent,\n    SensorComponent,\n    TableComponent,\n    DashboardComponent,\n    ProductionComponent,\n    ContainerUpdateComponent,\n    ShellButtonComponent,\n    CameraViewComponent,\n    GridComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CommonModule,\n    HttpClientModule,\n    AngularSvgIconModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})\nexport class TicketComponent implements OnInit, OnChanges {\n\n  @Input() public title: string = \"Corn\";\n  @Input() public icon: string = \"ing_corn\";\n  @Input() public value: number = 17;\n  @Input() public valueDescription: string = \"1.5 kg\";\n  @Input() public exprationDate: Date = new Date();\n\n  private readonly minValueMargineTop = -336;\n  private readonly maxValueHeight = 341;\n\n  private colors = [\n    {value: 15, color: \"#FF1647\"},\n    {value: 50, color: \"#FF922D\"},\n    {value: 100, color: \"#4686FF\"}\n  ];\n\n  public valueHeight: string;\n  public valueMargineTop: string;\n  \n  public get valueColor(): string {\n    for (let i = 0; i < this.colors.length; i++) {\n        if (this.value < this.colors[i].value) {\n          return this.colors[i].color;\n        }\n    }\n    return \"#4686FF\";\n  }\n\n  constructor(private iconsService: IconsService) { \n\n  }\n  \n  ngOnInit(): void {\n    this.ngOnChanges(null);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    const height = this.maxValueHeight * (this.value / 100);\n    this.valueHeight = `${height}px`;\n    const diffFromMaxHeight = this.maxValueHeight - height;\n    this.valueMargineTop = `${(this.minValueMargineTop + diffFromMaxHeight)}px`;\n  }\n\n}\n","<div class=\"ticket-container\">\n    <div class=\"ticket-icon-background\">\n        <svg-icon [name]=\"icon\" [svgStyle]=\"{'margin.px':24}\">\n        </svg-icon>\n    </div>\n    <div class=\"ticket-title\">{{title}}</div>\n    <div class=\"ticket-value\" [style.color]=\"valueColor\">{{value}}%</div>\n    <div class=\"ticket-value-description\">{{valueDescription}}</div>\n    <div class=\"ticket-experation-date\">\n        <div>Expired</div>\n        <div>{{exprationDate | date:'short'}}</div>\n    </div>\n    <div class=\"ticket-background-value\" [style.height]=\"valueHeight\" [style.margin-top]=\"valueMargineTop\"></div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SafeMethodCall } from '@angular/compiler';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() public title = 'Performance';\n  @Input() public size: CARD_SIZE;\n  \n  constructor() { \n    this.size = CARD_SIZE.small;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\nexport enum CARD_SIZE {\n  small, \n  large,\n  large_height,\n  large_width \n}","<div class=\"card-container\">\n    <div class=\"flex\">\n        <div class=\"card-title-border\"></div>    \n        <div class=\"card-title\">{{title}}</div>\n    </div> \n    <div class=\"card-content\">\n        <ng-content>        \n        </ng-content>\n    </div>    \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container\">\n\n    <div class=\"grid-header-container\">\n        <div class=\"grid-header-item\">item</div>  <!-- ngFor -->  \n        <div class=\"grid-header-item\">item 2</div>  <!-- ngFor -->  \n    </div>\n\n\n    <div class=\"grid-body-container\">\n        <div class=\"grid-body-line\">\n            <div class=\"grid-cell-item\"> <!-- ngFor -->\n                cell item\n            </div>\n            <div class=\"grid-cell-item\"> <!-- ngFor -->\n                cell item 2\n            </div>\n        </div>    \n    </div>\n\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-shell-button',\n  templateUrl: './shell-button.component.html',\n  styleUrls: ['./shell-button.component.css']\n})\nexport class ShellButtonComponent implements OnInit {\n\n  @Input() public icon;\n  @Input() public state: string;\n  @Input() public selected: boolean;\n  @Input() public title: string;\n  \n  @Output() public onClick = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"button-container\" (click)=\"onClick.emit()\" [ngClass]=\"{selected: selected}\">\n    <svg-icon \n        [class]=\"'selected-svg'\" \n        [applyClass]=\"selected\" \n        [name]=\"icon\"\n        [svgStyle]=\"{'margin.px':40, 'fill': selected ? '#FDFDFD': '#4686FF'}\">\n    </svg-icon>\n    <div class=\"button-title\" [ngClass]=\"{selected: selected}\">\n        {{title}}\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}