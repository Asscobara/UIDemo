{"version":3,"sources":["./src/app/components/donut/donut.component.ts","./src/app/components/donut/donut.component.html","./src/app/components/production/production.component.ts","./src/app/components/production/production.component.html","./src/app/components/camera-view/camera-view.component.ts","./src/app/components/camera-view/camera-view.component.html","./src/app/components/sensors/sensor/sensor.component.ts","./src/app/components/sensors/sensor/sensor.component.html","./src/app/services/icons.service.ts","./src/app/components/sensors/sensors.component.ts","./src/app/components/sensors/sensors.component.html","./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/environments/environment.ts","./src/app/components/main-shell/main-shell.component.ts","./src/app/components/main-shell/main-shell.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/container-update/container-update.component.ts","./src/app/components/container-update/container-update.component.html","./src/app/components/value-bar/value-bar.component.ts","./src/app/components/value-bar/value-bar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/legend/legend.component.ts","./src/app/components/legend/legend.component.html","./src/app/app.module.ts","./src/app/components/ticket/ticket.component.ts","./src/app/components/ticket/ticket.component.html","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/grid/grid.component.ts","./src/app/components/grid/grid.component.html","./src/app/components/shell-button/shell-button.component.ts","./src/app/components/shell-button/shell-button.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ILagendData } from '../legend/legend.component';\n\n@Component({\n  selector: 'app-donut',\n  templateUrl: './donut.component.html',\n  styleUrls: ['./donut.component.css']\n})\nexport class DonutComponent implements OnChanges {\n\n  @Input() public value = 65;\n  @Input() public secondValue = 65;\n  @Input() public title = 'test123';\n  @Input() public subTitle = 'sub';\n  @Input() public valueColor = '#53EC62';\n  @Input() public dunatColor = '#FF1647';\n  @Input() public valueTitle = 'V1';\n  @Input() public secondValueTitle = 'V2';\n\n  public dashArray: string;\n\n  public data = [{\n    title: 'a1',\n    color: this.valueColor,  \n  }, {\n    title: 'a2',\n    color: this.dunatColor\n  }];\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.items = [{\n      name: this.valueTitle,\n      count: +this.value,\n      color: this.valueColor\n    },{\n      name: this.secondValueTitle,\n      count: +this.secondValue,\n      color: this.dunatColor\n    }];\n\n    this._total = this.items.map(a=>a.count).reduce((x,y) => x+y);\n    \n  }\n\n  public items:Array<{name:string,count:number,color:string}>;\n\n  private _total:number =0;\n \n  constructor() {\n  }\n\n  getPerimeter(radius:number):number {\n    return Math.PI*2*radius;\n  }\n\n  getColor(index:number):string {\n    return this.items[index].color;\n  }\n\n  getOffset(radius:number,index:number):number {   \n    var percent=0;\n    for(var i=0;i<index;i++) {\n      percent+=((this.items[i].count)/this._total);\n    }\n    var perimeter = Math.PI*2*radius;\n    return perimeter*percent;\n  }\n\n  lagendItems() : ILagendData[] {\n    return this.items.map(i => {\n      return { \n        title: i.name, \n        value: i.count, \n        valueColor: i.color \n      }; \n    });\n  }\n}\n","<div class=\"donut-main-container\">\n    <div class=\"donut-content\">\n        <div class=\"titles-text title\">{{title}}</div> \n        <div class=\"titles-text sub-title\">{{subTitle}}</div> \n    </div>\n    <svg height=\"85%\" width=\"85%\" viewBox=\"0 0 120 120\">       \n        <circle  *ngFor=\"let item of items;let i=index\" cx=\"60\" cy=\"60\" r=\"50\" fill=\"transparent\" stroke-width=\"20\"\n        [attr.stroke-dasharray]=\"getPerimeter(50)\" [attr.stroke-dashoffset]=\"getOffset(50,i)\" [attr.stroke]=\"getColor(i)\"/>             \n     </svg>\n</div>\n<app-legend [items]=\"lagendItems()\"></app-legend>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-production',\n  templateUrl: './production.component.html',\n  styleUrls: ['./production.component.css']\n})\nexport class ProductionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"production-container\">\n\n    <app-card [title]=\"'Grid test'\">\n        <app-grid></app-grid>\n    </app-card>\n\n</div>","import { Component, OnInit, Input, ElementRef, ViewChild } from '@angular/core';\nimport { ISensor } from '../sensors/sensor/sensor.component';\n\n@Component({\n  selector: 'app-camera-view',\n  templateUrl: './camera-view.component.html',\n  styleUrls: ['./camera-view.component.css']\n})\nexport class CameraViewComponent implements OnInit {\n\n  @Input() public videoSource: string;\n  @Input() public sensor: ISensor;\n  @ViewChild('videoPlayer') videoplayer: ElementRef;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public toggleVideo() {\n    this.videoplayer.nativeElement.play();\n  }\n\n}\n","\n<app-sensor [data]=\"sensor\">\n\n</app-sensor>\n\n<video class=\"camera-view\" controls (click)=\"toggleVideo()\" #videoPlayer>\n    <source src=\"{{videoSource}}\" type=\"video/mp4\" />\n    Browser not supported\n</video>","import { Component, OnInit, Input } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-sensor',\n  templateUrl: './sensor.component.html',\n  styleUrls: ['./sensor.component.css']\n})\nexport class SensorComponent implements OnInit {\n\n  constructor(private iconsService: IconsService) { \n    this.data = {\n       id: 0,\n       title: 'corn',\n       color: '#53EC62',\n       icon: 'ing_corn',\n       value: null\n    }  \n  }\n\n  @Input() public data: ISensor;\n\n  ngOnInit(): void {\n  }\n\n}\n\nexport interface ISensor {\n  id: number;\n  title: string;\n  icon: string;\n  color: string;\n  value: number;\n}","<div class=\"sensor-container\">\n    <svg-icon class=\"sensor-icon\" [name]=\"data.icon\" [svgStyle]=\"{'width.px':16, 'height.px':16, 'padding.px':7}\"></svg-icon>\n    <div class=\"sensor-title\">{{ data.title }}</div>\n    <div *ngIf=\"data.value === null\" class=\"sensor-circle\">\n        <div class=\"sensor-inner-circle\" [ngStyle]=\"{'background': data.color}\"></div>\n    </div>\n    <div *ngIf=\"data.value !== null\" class=\"sensor-value\">\n        {{ data.value }}\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { SvgIconRegistryService } from 'angular-svg-icon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IconsService {\n\n  private readonly basePath = '../assets/images/';\n  \n  public constructor(private iconRegistry: SvgIconRegistryService) { \n    this.loadAllIcons();\n  }\n\n  private loadAllIcons() {\n    // #region logo\n    this.iconRegistry.loadSvg(`${this.basePath}logo/logo_text.svg`, 'logo_txt').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}logo/logo_image.svg`, 'logo_img').subscribe();\n    // #endregion\n\n    // #region ingredience\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/corn.svg`, 'ing_corn').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/mashroom.svg`, 'ing_mashroom').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/olives.svg`, 'ing_olives').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}ingredience/onion.svg`, 'ing_onion').subscribe();\n    //#endregion\n\n    // #region sensors\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/camera.svg`, 'sens_cam').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/cloud.svg`, 'sens_cloud').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/drop.svg`, 'sens_drop').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/electricity.svg`, 'sens_elec').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/humidity.svg`, 'sens_humidity').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/o3.svg`, 'sens_o3').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/temperature.svg`, 'sens_temp').subscribe();\n    this.iconRegistry.loadSvg(`${this.basePath}sensors/vbact.svg`, 'sens_vbact').subscribe();\n    // #endregion\n \n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ISensor } from './sensor/sensor.component';\n\n@Component({\n  selector: 'app-sensors',\n  templateUrl: './sensors.component.html',\n  styleUrls: ['./sensors.component.css']\n})\nexport class SensorsComponent implements OnInit {\n\n  @Input() public data: ISensors;\n\n  public camData: any;\n  constructor() { }\n\n  public groups: ISensorsGroup;\n\n  ngOnInit(): void {\n    this.data = this.getMock();\n    this.camData = {\n     streamUrl: 'https://www.rmp-streaming.com/media/big-buck-bunny-360p.mp4', \n     sensor: {\n      id: 0,\n      icon: 'sens_vbact',\n      color: '#53EC62',\n      title: 'VBACT',\n      value: null\n      }\n    };\n  }\n\n  private getMock(): ISensors {\n    return {\n      groups: [{\n        title: 'Title',\n        sensors:[{\n          id: 0,\n          icon: 'sens_elec',\n          color: '#53EC62',\n          title: 'Electricity',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_drop',\n          color: '#53EC62',\n          title: 'Water Pressure',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_drop',\n          color: '#53EC62',\n          title: 'Water Pressure',\n          value: null\n        }]\n        }, {\n        title: 'Ozone',\n        sensors:[{\n          id: 0,\n          icon: 'sens_o3',\n          color: '#53EC62',\n          title: 'level in water (ppm)',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_o3',\n          color: '#FF1647',\n          title: 'Water Pressure',\n          value: null\n        }],\n        }, {\n          title: 'Title',\n          sensors:[{\n            id: 0,\n            icon: 'sens_temp',\n            color: '#53EC62',\n            title: 'Temperature (0C)',\n            value: 20\n          }, {\n            id: 0,\n            icon: 'sens_humidity',\n            color: '#FF1647',\n            title: 'Humidity (%)',\n            value: 20\n          }]\n      }, {\n        title: 'Ozon',\n        sensors:[{\n          id: 0,\n          icon: 'sens_vbact',\n          color: '#53EC62',\n          title: 'VBACT',\n          value: null\n        }, {\n          id: 0,\n          icon: 'sens_vbact',\n          color: '#53EC62',\n          title: 'VBACT',\n          value: null\n        }]\n    }\n    ]\n    }\n  }\n\n}\n\n\nexport interface ISensorsGroup {\n  title: string;\n  sensors: ISensor[];\n}\n\nexport interface ISensors {\n  groups: ISensorsGroup[];\n}","\n<div *ngFor=\"let group of data.groups\">\n    <div class=\"group-title\">{{ group.title }}</div>        \n    <div class=\"sensor-item\" *ngFor=\"let sensor of group.sensors\">\n        <app-sensor [data]=\"sensor\">\n        </app-sensor>\n    </div>\n    <div class=\"sensor-item v-space\"></div>\n</div> \n\n<div class=\"sensor-item\">\n    <app-camera-view [sensor]=\"camData.sensor\" [videoSource]=\"camData.streamUrl\">\n    </app-camera-view>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"table-container\">\n\n    <div class=\"table-header\">\n\n    </div>\n\n    <div class=\"table-rows\">\n        \n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverurl: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-main-shell',\n  templateUrl: './main-shell.component.html',\n  styleUrls: ['./main-shell.component.css']\n})\nexport class MainShellComponent implements OnInit {\n\n  @Output() public onViewStateCahnged = new EventEmitter<string>();\n  \n  constructor(private iconsService: IconsService) { }\n\n  public viewState: 'main' | 'prod' | 'container';\n  ngOnInit(): void {\n    this.viewState = 'main';\n  }\n\n}\n","<div class=\"main-shell-container\">\n\n    <div appResolutionFit class=\"shell-top-bar-icon\">\n        <svg-icon class=\"logo-icon\" [name]=\"'logo_img'\" [svgStyle]=\"{'width.px':64, 'height.px':64, 'padding.px':1}\"></svg-icon>\n        <div class=\"logo-text\">HIGHPPER</div>\n    </div>\n\n    <div class=\"shell-top-bar-container\">\n        toolbar    \n    </div>\n\n    <div class=\"shell-side-bar-container\">\n\n        <div class=\"shell-side-button\">\n            <app-shell-button \n                [selected]=\"viewState == 'main'\" \n                (onClick)=\"viewState = 'main'; onViewStateCahnged.emit(viewState);\"\n                [title]=\"'Main page'\" \n                [icon]=\"'ing_corn'\">\n            </app-shell-button>\n        </div>\n        <div class=\"shell-side-button\">\n            <app-shell-button \n                [selected]=\"viewState == 'prod'\" \n                (onClick)=\"viewState = 'prod'; onViewStateCahnged.emit(viewState);\"\n                [title]=\"'Pizza in production'\" \n                [icon]=\"'ing_corn'\">\n            </app-shell-button>\n        </div>\n        <div class=\"shell-side-button\">\n            <app-shell-button \n                [selected]=\"viewState == 'container'\" \n                (onClick)=\"viewState = 'container'; onViewStateCahnged.emit(viewState);\"\n                [title]=\"'Container update'\" \n                [icon]=\"'ing_corn'\">\n            </app-shell-button>        \n        </div>        \n    </div>\n    <ng-content></ng-content>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  // temp\n  public ticketValue: number = 12;\n  public valueBarValue: number = 44;\n\n  public donutValue: number = 43;\n  public secondDounatValue: number = 11;\n  \n  constructor(public iconService: IconsService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"dashboard-container\">\n\n    <app-card [title]=\"'Sensors'\" class=\"span-row-2\">\n        <app-sensors></app-sensors>\n    </app-card>\n\n    <app-card [title]=\"'Performance'\">\n        \n        <app-donut \n            [title]=\"'Today'\" \n            [subTitle]=\"'05.11.2020'\"\n            [value]=\"125\" \n            [valueTitle]=\"'Pizzas made'\"\n            [secondValue]=\"4\"\n            [secondValueTitle]=\"'Fialed Pizzas'\">\n        </app-donut>\n        \n    </app-card>\n\n    <app-card [title]=\"'Type of dugh'\">\n        \n        <app-donut \n            [title]=\"'Today'\" \n            [subTitle]=\"'05.11.2020'\"\n            [value]=\"85\" \n            [valueColor]=\"'#4686FF'\"\n            [valueTitle]=\"'13” Thick'\"\n            [secondValue]=\"40\"\n            [dunatColor]=\"'#244583'\"\n            [secondValueTitle]=\"'14” Thin'\">\n        </app-donut>\n\n    </app-card>\n  \n    <app-card [title]=\"'Distribution by additions'\" class=\"span-col-2\">\n        <div class=\"flex ticket-container\">\n            <app-value-bar [title]=\"'Onion'\" [value]=\"12\"></app-value-bar>\n            <app-value-bar [value]=\"20\"></app-value-bar>\n            <app-value-bar [value]=\"33\"></app-value-bar>\n            <app-value-bar [value]=\"30\"></app-value-bar>\n            <app-value-bar [value]=\"17\"></app-value-bar>\n            <app-value-bar [value]=\"47\"></app-value-bar>\n            <app-value-bar [value]=\"9\"></app-value-bar>\n            <app-value-bar [value]=\"47\"></app-value-bar>\n            <app-value-bar [value]=\"19\"></app-value-bar>\n          </div>\n    </app-card>\n  \n    <app-card [title]=\"'Ingredients'\" class=\"span-col-3\">\n        <div class=\"flex ticket-container\">\n            <app-ticket [title]=\"'Mashroom'\" [icon]=\"'ing_mashroom'\" [value]=\"12\"></app-ticket>\n            <app-ticket [value]=\"23\"></app-ticket>\n            <app-ticket [value]=\"44\"></app-ticket>\n            <app-ticket [value]=\"34\"></app-ticket>\n            <app-ticket [value]=\"23\"></app-ticket>\n            <app-ticket [value]=\"44\"></app-ticket>\n            <app-ticket [value]=\"3\"></app-ticket>\n        </div>\n    </app-card>\n    \n  </div>  \n\n\n      <!--\n        <app-card [title]=\"'Control'\" class=\"card\">\n        <label>Dounat Value 1</label>\n        <input type=\"number\" [(ngModel)]=\"donutValue\"/>\n        <br/>\n        <label>Dounat Value 2</label>\n        <input type=\"number\" [(ngModel)]=\"secondDounatValue\"/>\n        <br/>\n        <label>ValueBar Value</label>\n        <input type=\"number\" [(ngModel)]=\"valueBarValue\"/>\n        <br/>\n        <label>Ticket Value</label>\n        <input type=\"number\" [(ngModel)]=\"ticketValue\"/>\n        </app-card>\n    -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container-update',\n  templateUrl: './container-update.component.html',\n  styleUrls: ['./container-update.component.css']\n})\nexport class ContainerUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>container-update works!</p>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ILagendData } from '../legend/legend.component';\n\n@Component({\n  selector: 'app-value-bar',\n  templateUrl: './value-bar.component.html',\n  styleUrls: ['./value-bar.component.css']\n})\nexport class ValueBarComponent implements OnInit, OnChanges {\n\n  constructor() { }\n  \n  @Input() public value = 33;\n  @Input() public title = 'title';\n\n  public height: string;\n  public opacity: number;\n\n  private readonly maxValue = 47;\n  private readonly maxValueHeight = 155;\n  \n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const valuePrecentage = this.value / this.maxValue;\n    const height = this.maxValueHeight * valuePrecentage;\n    this.opacity = valuePrecentage ;\n    this.height = `${height}px`;\n  }\n\n  public lagendItems(): ILagendData[] {\n    return [ { title: this.title, value: this.value, valueColor: '#244583' } ];\n  }\n}\n\n\n\n","<div class=\"bar-container\">\n    <div class=\"bar-value\" [style.height]=\"height\" [style.opacity]=\"opacity\">        \n    </div>\n</div>\n<app-legend class=\"bar-legend\" [items]=\"lagendItems()\"></app-legend>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public title = 'highpper-ui';\n  public donutValue = 5;\n  public secondDounatValue = 33;\n  public valueBarValue = 12;\n  public ticketValue = 11;\n\n  public viewState: string = 'main';\n\n  ngOnInit() {\n  //  document.getElementById('file').onchange = (data) => {\n  //    console.log('change', data);\n  //  }\n  }\n  \n}\n","<app-main-shell (onViewStateCahnged)=\"viewState = $event\">  \n  <app-dashboard *ngIf=\"viewState == 'main'\"></app-dashboard>\n  <app-production *ngIf=\"viewState == 'prod'\"></app-production>\n  <app-container-update *ngIf=\"viewState == 'container'\"></app-container-update>\n</app-main-shell>\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnChanges {\n\n  @Input() public items: ILagendData[];\n\n  public gridColumns: string = \"1fr\";\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges) { \n    this.gridColumns = \"\";\n    this.items.forEach(i => this.gridColumns = `${this.gridColumns} 1fr`);\n  }\n}\n\nexport interface ILagendData {\n  title: string;\n  value: number;\n  valueColor: string;\n}\n","<div class=\"lagend-container\" [ngStyle]=\"{'grid-template-columns': gridColumns}\">\n    <div *ngFor=\"let item of items\" class=\"lagend-title\">\n        <span>{{item.title}}</span>\n    </div>\n    <div *ngFor=\"let item of items\" class=\"lagend-value\">\n        <span [ngStyle]=\"{'color': item.valueColor}\">{{item.value}}</span>\n    </div>        \n </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './components/card/card.component';\nimport { DonutComponent } from './components/donut/donut.component';\nimport { FormsModule } from '@angular/forms';\nimport { ValueBarComponent } from './components/value-bar/value-bar.component';\nimport { LegendComponent } from './components/legend/legend.component';\nimport { TicketComponent } from './components/ticket/ticket.component';\nimport { CommonModule } from '@angular/common';\nimport { MainShellComponent } from './components/main-shell/main-shell.component';\nimport { SensorsComponent } from './components/sensors/sensors.component';\nimport { SensorComponent } from './components/sensors/sensor/sensor.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularSvgIconModule } from 'angular-svg-icon';\nimport { TableComponent } from './components/table/table.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProductionComponent } from './components/production/production.component';\nimport { ContainerUpdateComponent } from './components/container-update/container-update.component';\nimport { ShellButtonComponent } from './components/shell-button/shell-button.component';\nimport { CameraViewComponent } from './components/camera-view/camera-view.component';\nimport { GridComponent } from './components/grid/grid.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    DonutComponent,\n    ValueBarComponent,\n    LegendComponent,\n    TicketComponent,\n    MainShellComponent,\n    SensorsComponent,\n    SensorComponent,\n    TableComponent,\n    DashboardComponent,\n    ProductionComponent,\n    ContainerUpdateComponent,\n    ShellButtonComponent,\n    CameraViewComponent,\n    GridComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CommonModule,\n    HttpClientModule,\n    AngularSvgIconModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IconsService } from 'src/app/services/icons.service';\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.css']\n})\nexport class TicketComponent implements OnInit, OnChanges {\n\n  @Input() public title: string = \"Corn\";\n  @Input() public icon: string = \"ing_corn\";\n  @Input() public value: number = 17;\n  @Input() public valueDescription: string = \"1.5 kg\";\n  @Input() public exprationDate: Date = new Date();\n\n  private readonly minValueMargineTop = -336;\n  private readonly maxValueHeight = 341;\n\n  private colors = [\n    {value: 15, color: \"#FF1647\"},\n    {value: 50, color: \"#FF922D\"},\n    {value: 100, color: \"#4686FF\"}\n  ];\n\n  public valueHeight: string;\n  public valueMargineTop: string;\n  \n  public get valueColor(): string {\n    for (let i = 0; i < this.colors.length; i++) {\n        if (this.value < this.colors[i].value) {\n          return this.colors[i].color;\n        }\n    }\n    return \"#4686FF\";\n  }\n\n  constructor(private iconsService: IconsService) { \n\n  }\n  \n  ngOnInit(): void {\n    this.ngOnChanges(null);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    const height = this.maxValueHeight * (this.value / 100);\n    this.valueHeight = `${height}px`;\n    const diffFromMaxHeight = this.maxValueHeight - height;\n    this.valueMargineTop = `${(this.minValueMargineTop + diffFromMaxHeight)}px`;\n  }\n\n}\n","<div class=\"ticket-container\">\n    <div class=\"ticket-icon-background\">\n        <svg-icon [name]=\"icon\" [svgStyle]=\"{'margin.px':24}\">\n        </svg-icon>\n    </div>\n    <div class=\"ticket-title\">{{title}}</div>\n    <div class=\"ticket-value\" [style.color]=\"valueColor\">{{value}}%</div>\n    <div class=\"ticket-value-description\">{{valueDescription}}</div>\n    <div class=\"ticket-experation-date\">\n        <div>Expired</div>\n        <div>{{exprationDate | date:'short'}}</div>\n    </div>\n    <div class=\"ticket-background-value\" [style.height]=\"valueHeight\" [style.margin-top]=\"valueMargineTop\"></div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SafeMethodCall } from '@angular/compiler';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() public title = 'Performance';\n  @Input() public size: CARD_SIZE;\n  \n  constructor() { \n    this.size = CARD_SIZE.small;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\nexport enum CARD_SIZE {\n  small, \n  large,\n  large_height,\n  large_width \n}","<div class=\"card-container\">\n    <div class=\"flex\">\n        <div class=\"card-title-border\"></div>    \n        <div class=\"card-title\">{{title}}</div>\n    </div> \n    <div class=\"card-content\">\n        <ng-content>        \n        </ng-content>\n    </div>    \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container\">\n\n    <div class=\"grid-header-container\">\n        <div class=\"grid-header-item\">item</div>  <!-- ngFor -->  \n        <div class=\"grid-header-item\">item 2</div>  <!-- ngFor -->  \n    </div>\n\n\n    <div class=\"grid-body-container\">\n        <div class=\"grid-body-line\">\n            <div class=\"grid-cell-item\"> <!-- ngFor -->\n                cell item\n            </div>\n            <div class=\"grid-cell-item\"> <!-- ngFor -->\n                cell item 2\n            </div>\n        </div>    \n    </div>\n\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-shell-button',\n  templateUrl: './shell-button.component.html',\n  styleUrls: ['./shell-button.component.css']\n})\nexport class ShellButtonComponent implements OnInit {\n\n  @Input() public icon;\n  @Input() public state: string;\n  @Input() public selected: boolean;\n  @Input() public title: string;\n  \n  @Output() public onClick = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"button-container\" (click)=\"onClick.emit()\" [ngClass]=\"{selected: selected}\">\n    <svg-icon \n        [class]=\"'selected-svg'\" \n        [applyClass]=\"selected\" \n        [name]=\"icon\"\n        [svgStyle]=\"{'margin.px':40, 'fill': selected ? '#FDFDFD': '#4686FF'}\">\n    </svg-icon>\n    <div class=\"button-title\" [ngClass]=\"{selected: selected}\">\n        {{title}}\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}